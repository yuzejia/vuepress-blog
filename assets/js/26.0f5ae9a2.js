(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{383:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"angular-装饰器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#angular-装饰器"}},[t._v("#")]),t._v(" Angular 装饰器")]),t._v(" "),e("p",[t._v("Angular 有那些装饰器？简单介绍Angular 都有那些装饰器")]),t._v(" "),e("h2",{attrs:{id:"类装饰器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类装饰器"}},[t._v("#")]),t._v(" 类装饰器")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("@NgModule")]),t._v(" "),e("ul",[e("li",[t._v("模块装饰器(帮把相关的一些代码逻辑组织在一起)")]),t._v(" "),e("li",[t._v("NgModule 可以将其组件和一组相关代码(如服务)关联起来，形成功能单元。每个Angular应用都有一个根模块，通常命名为AppModule")])])]),t._v(" "),e("li",[e("strong",[t._v("@Component")]),t._v(" "),e("ul",[e("li",[t._v("组件装饰器")]),t._v(" "),e("li",[t._v("组件可以认为是屏幕上的一个视图． 组件定义视图。每个Angular应用都至少有一个组件，也就是根组件")])])]),t._v(" "),e("li",[e("strong",[t._v("@Injectable")]),t._v(" "),e("ul",[e("li",[t._v("依赖装饰器(把一个类定义为服务)")]),t._v(" "),e("li",[t._v("组件使用服务。对于与特定视图无关并希望跨组件共享的数据或逻辑，可以创建服务类。")])])]),t._v(" "),e("li",[e("strong",[t._v("@Pipe")]),t._v(" "),e("ul",[e("li",[t._v("管道装饰器")]),t._v(" "),e("li",[t._v("管道的作用就是传输。并且不同的管道具有不同的作用。(其实就是处理数据)")])])]),t._v(" "),e("li",[e("strong",[t._v("@Directive")]),t._v(" "),e("ul",[e("li",[t._v("指令装饰器")]),t._v(" "),e("li",[t._v("用来控制组件的某些行为")])])])]),t._v(" "),e("h3",{attrs:{id:"ngmodule"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ngmodule"}},[t._v("#")]),t._v(" @NgModule")]),t._v(" "),e("p",[t._v("把一个类标记为 NgModule，并提供配置元数据。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("选项")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#providers",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("providers?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("在当前模块的注入器中可用的一组可注入对象。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#declarations",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("declarations?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("属于该模块的一组组件、指令和管道（统称"),e("a",{attrs:{href:"https://www.angular.cn/guide/glossary#declarable",target:"_blank",rel:"noopener noreferrer"}},[t._v("可声明对象"),e("OutboundLink")],1),t._v("）。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#imports",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("imports?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("这里列出的 NgModule 所导出的"),e("a",{attrs:{href:"https://www.angular.cn/guide/glossary#declarable",target:"_blank",rel:"noopener noreferrer"}},[t._v("可声明对象"),e("OutboundLink")],1),t._v("可用在当前模块内的模板中。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#exports",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("exports?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("此 NgModule 中声明的一组组件、指令和管道可以在导入了本模块的模块下任何组件的模板中使用。 导出的这些可声明对象就是该模块的公共 API。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#entryComponents",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("entryComponents?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("定义此 NgModule 中要编译的组件集，这样它们才可以动态加载到视图中。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#bootstrap",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("bootstrap?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("当该模块引导时需要进行引导的组件。列在这里的所有组件都会自动添加到 "),e("code",[t._v("entryComponents")]),t._v(" 中。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#schemas",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("schemas?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("该 NgModule 中允许使用的声明元素的 schema（HTML 架构）。 元素和属性（无论是 Angular 组件还是指令）都必须声明在 schema 中。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#id",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("id?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("当前 NgModule 在 "),e("code",[t._v("getModuleFactory")]),t._v(" 中的名字或唯一标识符。 如果为 "),e("code",[t._v("undefined")]),t._v("，则该模块不会被注册进 "),e("code",[t._v("getModuleFactory")]),t._v(" 中。")])]),t._v(" "),e("tr",[e("td",[e("a",{attrs:{href:"https://www.angular.cn/api/core/NgModule#jit",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("jit?")]),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("如果存在，则该指令/组件将被 AOT 编译器忽略。它会保留在发布代码中，并且 JIT 编译器会尝试在运行时在浏览器中对其进行编译。为了确保其行为正确，该应用程序必须导入 "),e("code",[t._v("@angular/compiler")]),t._v(" 。")])])])]),t._v(" "),e("h3",{attrs:{id:"component"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#component"}},[t._v("#")]),t._v(" @component")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.angular.cn/api/core/Component",target:"_blank",rel:"noopener noreferrer"}},[t._v("Api: https://www.angular.cn/api/core/Component"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("一个装饰器，用于把某个类标记为 Angular 组件，并为它配置一些元数据，以决定该组件在运行期间该如何处理、实例化和使用。")]),t._v(" "),e("div",{staticClass:"language-typeScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("@"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Component")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'app-component-overview'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  templateUrl"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./component-overview.component.html'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  styleUrls"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./component-overview.component.css'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"injectable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#injectable"}},[t._v("#")]),t._v(" @Injectable()")]),t._v(" "),e("div",{staticClass:"language-typeScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Injectable "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Injectable")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    providedIn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HeroService")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h4",{attrs:{id:"参数-providedin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数-providedin"}},[t._v("#")]),t._v(" 参数 providedIn")]),t._v(" "),e("div",{staticClass:"language-typeScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("    providedIn"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Type"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'root'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'platform'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'any'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n")])])]),e("ul",[e("li",[t._v("root：在大多数应用程序中是指应用程序级注入器。")]),t._v(" "),e("li",[t._v("platform ：页面上所有应用程序共享的平台注入器的特殊单例。")]),t._v(" "),e("li",[t._v("any：在每个惰性加载的模块中提供一个唯一的实例，而所有急性加载的模块共享一个实例。")])]),t._v(" "),e("h4",{attrs:{id:"是必须的么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#是必须的么？"}},[t._v("#")]),t._v(" 是必须的么？")]),t._v(" "),e("p",[t._v("如果所创建的服务不依赖于其他对象，是可以不用使用 Injectable 类装饰器。但当该服务需要在构造函数中注入依赖对象，就需要使用 Injectable 装饰器。不过比较推荐的做法不管是否有依赖对象，在创建服务时都使用 Injectable 类装饰器。")]),t._v(" "),e("h3",{attrs:{id:"pipe"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pipe"}},[t._v("#")]),t._v(" @Pipe")]),t._v(" "),e("p",[t._v("管道装饰器")]),t._v(" "),e("h4",{attrs:{id:"参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参数"}},[t._v("#")]),t._v(" 参数")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("name\t\n在模板中绑定时使用的管道名。 通常使用 lowerCamelCase 拼写方式，因为名字中不允许包含减号（-）。")])]),t._v(" "),e("li",[e("p",[t._v("pure?\t\n为 true 时，该管道是纯管道，也就是说 transform() 方法只有在其输入参数变化时才会被调用。管道默认都是纯管道。")])])]),t._v(" "),e("h4",{attrs:{id:"管道命名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#管道命名"}},[t._v("#")]),t._v(" 管道命名")]),t._v(" "),e("p",[t._v("管道类名应该使用 UpperCamelCase（类名的通用约定），而相应的 name 字符串应该使用 lowerCamelCase。 name 字符串中不应该使用中线（“中线格式”或“烤串格式”）。")]),t._v(" "),e("div",{staticClass:"language-typeScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("    @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Pipe")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ellipsis'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EllipsisPipe")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PipeTransform")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"directive-指令装饰器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#directive-指令装饰器"}},[t._v("#")]),t._v(" @Directive 指令装饰器")]),t._v(" "),e("div",{staticClass:"language-typeScript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-typescript"}},[e("code",[t._v("    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("Directive"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@angular/core'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    @"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Directive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    selector"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my-directive'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDirective")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);